// <auto-generated />
using System;
using BLL.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BLL.Entities
{
    [DbContext(typeof(Db))]
    [Migration("20241127195618_v4")]
    partial class v4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BLL.DAL.Director", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<bool>("isretired")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("surname")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id")
                        .HasName("director_pkey");

                    b.ToTable("director");
                });

            modelBuilder.Entity("BLL.DAL.genre", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("id")
                        .HasName("genre_pkey");

                    b.ToTable("genre");
                });

            modelBuilder.Entity("BLL.DAL.movie", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("directorid")
                        .HasColumnType("integer");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<DateOnly>("releasedate")
                        .HasColumnType("date");

                    b.Property<decimal?>("totalrevenue")
                        .HasPrecision(18, 2)
                        .HasColumnType("numeric(18,2)");

                    b.HasKey("id")
                        .HasName("movie_pkey");

                    b.HasIndex("directorid");

                    b.ToTable("movie");
                });

            modelBuilder.Entity("BLL.DAL.moviegenre", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("genreid")
                        .HasColumnType("integer");

                    b.Property<int?>("movieid")
                        .HasColumnType("integer");

                    b.HasKey("id")
                        .HasName("moviegenre_pkey");

                    b.HasIndex("genreid");

                    b.HasIndex(new[] { "movieid", "genreid" }, "moviegenre_movieid_genreid_key")
                        .IsUnique();

                    b.ToTable("moviegenre");
                });

            modelBuilder.Entity("BLL.DAL.movie", b =>
                {
                    b.HasOne("BLL.DAL.Director", "director")
                        .WithMany("movie")
                        .HasForeignKey("directorid")
                        .OnDelete(DeleteBehavior.SetNull)
                        .HasConstraintName("movie_directorid_fkey");

                    b.Navigation("director");
                });

            modelBuilder.Entity("BLL.DAL.moviegenre", b =>
                {
                    b.HasOne("BLL.DAL.genre", "genre")
                        .WithMany("moviegenre")
                        .HasForeignKey("genreid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("moviegenre_genreid_fkey");

                    b.HasOne("BLL.DAL.movie", "movie")
                        .WithMany("moviegenre")
                        .HasForeignKey("movieid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("moviegenre_movieid_fkey");

                    b.Navigation("genre");

                    b.Navigation("movie");
                });

            modelBuilder.Entity("BLL.DAL.Director", b =>
                {
                    b.Navigation("movie");
                });

            modelBuilder.Entity("BLL.DAL.genre", b =>
                {
                    b.Navigation("moviegenre");
                });

            modelBuilder.Entity("BLL.DAL.movie", b =>
                {
                    b.Navigation("moviegenre");
                });
#pragma warning restore 612, 618
        }
    }
}
